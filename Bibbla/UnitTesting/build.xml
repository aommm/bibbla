<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="UnitTesting">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../../../../usr/lib/eclipse"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="ActionBarSherlock.location" value="../../Libraries/ActionBarSherlock/library"/>
    <property name="Bibbla.location" value="../"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <path id="Android Dependencies.libraryclasspath">
        <pathelement location="../../Libraries/ActionBarSherlock/library/bin/actionbarsherlock.jar"/>
        <pathelement location="../libs/jsoup-1.7.1.jar"/>
        <pathelement location="../../Libraries/ActionBarSherlock/library/libs/android-support-v4.jar"/>
    </path>
    <path id="Android 4.1.libraryclasspath">
        <pathelement location="../../../../../dev/android-sdk-linux/platforms/android-16/android.jar"/>
    </path>
    <path id="ActionBarSherlock.classpath">
        <path refid="Android 4.1.libraryclasspath"/>
        <path refid="Android Dependencies.libraryclasspath"/>
        <pathelement location="${ActionBarSherlock.location}/bin/classes"/>
    </path>
    <path id="Bibbla.classpath">
        <path refid="Android Dependencies.libraryclasspath"/>
        <path refid="Android 4.1.libraryclasspath"/>
        <path refid="ActionBarSherlock.classpath"/>
        <pathelement location="${Bibbla.location}/bin/classes"/>
    </path>
    <path id="JUnit 3.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/dropins/jdt/plugins/org.junit_3.8.2.v3_8_2_v20100427-1100/junit.jar"/>
    </path>
    <path id="UnitTesting.classpath">
        <pathelement location="bin"/>
        <path refid="Bibbla.classpath"/>
        <path refid="JUnit 3.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="test">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall">
        <ant antfile="build.xml" dir="${ActionBarSherlock.location}" inheritAll="false" target="clean"/>
        <ant antfile="build.xml" dir="${Bibbla.location}" inheritAll="false" target="clean"/>
    </target>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects">
        <ant antfile="build.xml" dir="${ActionBarSherlock.location}" inheritAll="false" target="build-project">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
        <ant antfile="build.xml" dir="${Bibbla.location}" inheritAll="false" target="build-project">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
    </target>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="test"/>
            <classpath refid="UnitTesting.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="SerializableCallbackTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="dat255.grupp06.bibbla.utils.SerializableCallbackTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTesting.classpath"/>
        </junit>
    </target>
    <target name="UnitTesting">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="dat255.grupp06.bibbla.backend.tasks.LoginJobTest" todir="${junit.output.dir}"/>
            <test name="dat255.grupp06.bibbla.backend.tasks.MyBooksJobTest" todir="${junit.output.dir}"/>
            <test name="dat255.grupp06.bibbla.backend.tasks.MyDebtJobTest" todir="${junit.output.dir}"/>
            <test name="dat255.grupp06.bibbla.backend.tasks.MyReservationsJobTest" todir="${junit.output.dir}"/>
            <test name="dat255.grupp06.bibbla.backend.tasks.RenewJobTest" todir="${junit.output.dir}"/>
            <test name="dat255.grupp06.bibbla.backend.tasks.SearchJobTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTesting.classpath"/>
        </junit>
    </target>
    <target name="ReserveJobTest.testRunBadUrl">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="dat255.grupp06.bibbla.backend.tasks.ReserveJobTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTesting.classpath"/>
        </junit>
    </target>
    <target name="ReserveJobTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="dat255.grupp06.bibbla.backend.tasks.ReserveJobTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTesting.classpath"/>
        </junit>
    </target>
    <target name="ReserveJobTest.testRunValid">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="dat255.grupp06.bibbla.backend.tasks.ReserveJobTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTesting.classpath"/>
        </junit>
    </target>
    <target name="LoginJobTest (2)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="dat255.grupp06.bibbla.backend.tasks.LoginJobTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTesting.classpath"/>
        </junit>
    </target>
    <target name="LoginJobTest.testNormalCredentials">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="dat255.grupp06.bibbla.backend.tasks.LoginJobTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTesting.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
